{"remainingRequest":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\sa\\Desktop\\openrank\\08\\mock\\covid19.js","dependencies":[{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\mock\\covid19.js","mtime":1638539142000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\babel.config.js","mtime":1638539142000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\babel-loader\\lib\\index.js","mtime":1734174290000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8g5LiN5L2/55So5Zu65a6a5pWw5o2u77yM5L2/55SoIE1vY2sg55Sf5oiQ5qih5ouf5pWw5o2uCi8vIGltcG9ydCBvdmVyQWxsRGF0YSBmcm9tICcuLi9kYXRhL2NvdmlkMTktb3ZlcmFsbC5qc29uJwpjb25zdCBwcm92aW5jZURhdGEgPSByZXF1aXJlKCcuLi9kYXRhL2NvdmlkMTktcHJvdmluY2UuanNvbicpOwpjb25zdCBkYWlseURhdGEgPSByZXF1aXJlKCcuLi9kYXRhL2NvdmlkMTktZGFpbHktbGlzdC5qc29uJyk7CmNvbnN0IE1vY2sgPSByZXF1aXJlKCdtb2NranMnKTsKY29uc3QgUmFuZG9tID0gTW9jay5SYW5kb207Cm1vZHVsZS5leHBvcnRzID0gW3sKICB1cmw6ICcvYXBpL2NvdmlkLTE5L292ZXJhbGwnLAogIHR5cGU6ICdnZXQnLAogIHJlc3BvbnNlOiBjb25maWcgPT4gewogICAgcmV0dXJuIHsKICAgICAgc3VjY2VzczogdHJ1ZSwKICAgICAgY29kZTogMjAwLAogICAgICBtZXNzYWdlOiAi5pON5L2c5oiQ5YqfIiwKICAgICAgZGF0YTogewogICAgICAgIGNvbmZpcm1lZENvdW50OiBSYW5kb20uaW50ZWdlcigxMTAwMDAsIDEyMDAwMCksCiAgICAgICAgY29uZmlybWVkSW5jcjogNzIsCiAgICAgICAgY3VyZWRDb3VudDogUmFuZG9tLmludGVnZXIoMTAwMDAwLCAxMTAwMDApLAogICAgICAgIGN1cmVkSW5jcjogMTczLAogICAgICAgIGN1cnJlbnRDb25maXJtZWRDb3VudDogUmFuZG9tLmludGVnZXIoMzAwMCwgNDAwMCksCiAgICAgICAgY3VycmVudENvbmZpcm1lZEluY3I6IC0xMTAsCiAgICAgICAgZGVhZENvdW50OiBSYW5kb20uaW50ZWdlcig0MDAwLCA2MDAwKSwKICAgICAgICBkZWFkSW5jcjogMTIsCiAgICAgICAgaW1wb3J0ZWRDb3VudDogUmFuZG9tLmludGVnZXIoNjAwMCwgODAwMCksCiAgICAgICAgaW1wb3J0ZWRJbmNyOiAyMywKICAgICAgICBub0luRmVjdENvdW50OiBSYW5kb20uaW50ZWdlcig0MDAsIDYwMCksCiAgICAgICAgbm9JbkZlY3RJbmNyOiA4LAogICAgICAgIHN1c3BlY3RJbmNyOiAwLAogICAgICAgIHN1c3BlY3RDb3VudDogMiwKICAgICAgICB1cGRhdGVUaW1lOiAiMjAyMS0wNy0xNSAyMDozOToxMSIsCiAgICAgICAgY3VyZWRSYXRlOiBSYW5kb20uZmxvYXQoOTAsIDk1LCAwLCA5KSwKICAgICAgICBkZWFkUmF0ZTogUmFuZG9tLmZsb2F0KDEsIDUsIDAsIDkpCiAgICAgIH0KICAgIH07CiAgfQp9LCB7CiAgdXJsOiAnL2FwaS9jb3ZpZC0xOS9hcmVhL2xhdGVzdC9saXN0JywKICB0eXBlOiAnZ2V0JywKICByZXNwb25zZTogY29uZmlnID0+IHsKICAgIHJldHVybiBwcm92aW5jZURhdGE7CiAgfQp9LCB7CiAgdXJsOiAnL2FwaS9jb3ZpZC0xOS9saXN0JywKICB0eXBlOiAnZ2V0JywKICByZXNwb25zZTogY29uZmlnID0+IHsKICAgIHJldHVybiBkYWlseURhdGE7CiAgfQp9XTs="},{"version":3,"names":["provinceData","require","dailyData","Mock","Random","module","exports","url","type","response","config","success","code","message","data","confirmedCount","integer","confirmedIncr","curedCount","curedIncr","currentConfirmedCount","currentConfirmedIncr","deadCount","deadIncr","importedCount","importedIncr","noInFectCount","noInFectIncr","suspectIncr","suspectCount","updateTime","curedRate","float","deadRate"],"sources":["C:/Users/sa/Desktop/openrank/08/mock/covid19.js"],"sourcesContent":["// 不使用固定数据，使用 Mock 生成模拟数据\n// import overAllData from '../data/covid19-overall.json'\nconst provinceData = require('../data/covid19-province.json')\nconst dailyData = require('../data/covid19-daily-list.json')\n\nconst Mock = require('mockjs')\nconst Random = Mock.Random\n\nmodule.exports = [\n  {\n    url: '/api/covid-19/overall',\n    type: 'get',\n    response: config => {\n      return {\n        success: true,\n        code: 200,\n        message: \"操作成功\",\n        data: {\n          confirmedCount: Random.integer(110000, 120000),\n          confirmedIncr: 72,\n          curedCount: Random.integer(100000, 110000),\n          curedIncr: 173,\n          currentConfirmedCount: Random.integer(3000, 4000),\n          currentConfirmedIncr: -110,\n          deadCount: Random.integer(4000, 6000),\n          deadIncr: 12,\n          importedCount: Random.integer(6000, 8000),\n          importedIncr: 23,\n          noInFectCount: Random.integer(400, 600),\n          noInFectIncr: 8,\n          suspectIncr: 0,\n          suspectCount: 2,\n          updateTime: \"2021-07-15 20:39:11\",\n          curedRate: Random.float(90, 95, 0, 9),\n          deadRate: Random.float(1, 5, 0, 9)\n        }\n      }\n    }\n  },\n  {\n    url: '/api/covid-19/area/latest/list',\n    type: 'get',\n    response: config => {\n      return provinceData\n    }\n  },\n  {\n    url: '/api/covid-19/list',\n    type: 'get',\n    response: config => {\n      return dailyData\n    }\n  }\n]\n"],"mappings":"AAAA;AACA;AACA,MAAMA,YAAY,GAAGC,OAAO,CAAC,+BAA+B,CAAC;AAC7D,MAAMC,SAAS,GAAGD,OAAO,CAAC,iCAAiC,CAAC;AAE5D,MAAME,IAAI,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAMG,MAAM,GAAGD,IAAI,CAACC,MAAM;AAE1BC,MAAM,CAACC,OAAO,GAAG,CACf;EACEC,GAAG,EAAE,uBAAuB;EAC5BC,IAAI,EAAE,KAAK;EACXC,QAAQ,EAAEC,MAAM,IAAI;IAClB,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE,GAAG;MACTC,OAAO,EAAE,MAAM;MACfC,IAAI,EAAE;QACJC,cAAc,EAAEX,MAAM,CAACY,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC;QAC9CC,aAAa,EAAE,EAAE;QACjBC,UAAU,EAAEd,MAAM,CAACY,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC;QAC1CG,SAAS,EAAE,GAAG;QACdC,qBAAqB,EAAEhB,MAAM,CAACY,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;QACjDK,oBAAoB,EAAE,CAAC,GAAG;QAC1BC,SAAS,EAAElB,MAAM,CAACY,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;QACrCO,QAAQ,EAAE,EAAE;QACZC,aAAa,EAAEpB,MAAM,CAACY,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;QACzCS,YAAY,EAAE,EAAE;QAChBC,aAAa,EAAEtB,MAAM,CAACY,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;QACvCW,YAAY,EAAE,CAAC;QACfC,WAAW,EAAE,CAAC;QACdC,YAAY,EAAE,CAAC;QACfC,UAAU,EAAE,qBAAqB;QACjCC,SAAS,EAAE3B,MAAM,CAAC4B,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;QACrCC,QAAQ,EAAE7B,MAAM,CAAC4B,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;MACnC;IACF,CAAC;EACH;AACF,CAAC,EACD;EACEzB,GAAG,EAAE,gCAAgC;EACrCC,IAAI,EAAE,KAAK;EACXC,QAAQ,EAAEC,MAAM,IAAI;IAClB,OAAOV,YAAY;EACrB;AACF,CAAC,EACD;EACEO,GAAG,EAAE,oBAAoB;EACzBC,IAAI,EAAE,KAAK;EACXC,QAAQ,EAAEC,MAAM,IAAI;IAClB,OAAOR,SAAS;EAClB;AACF,CAAC,CACF","ignoreList":[]}]}