{"remainingRequest":"C:\\Users\\sa\\Desktop\\08\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\sa\\Desktop\\08\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\sa\\Desktop\\08\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sa\\Desktop\\08\\src\\views\\main-layout.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\sa\\Desktop\\08\\src\\views\\main-layout.vue","mtime":1735132785550},{"path":"C:\\Users\\sa\\Desktop\\08\\babel.config.js","mtime":1638539142000},{"path":"C:\\Users\\sa\\Desktop\\08\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\08\\node_modules\\babel-loader\\lib\\index.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\08\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\08\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1734174292000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ChartCard","Search","DataMap","CuredAndDeadRateChart","BasicDataItemLabel","BasicTrendChart","ProvinceRankingBarChart","CurrentConfirmedCompareBarChart","BasicProportionChart","covid19Service","formatter","number","numbers","toString","split","reverse","segs","length","push","splice","join","getNumberStyle","color","fontSize","fontWeight","fill","initBasicConfig","data","currentConfirmedCount","confirmedCount","importedCount","noInFectCount","deadCount","curedCount","content","style","initProvinceConfirmedCountBoardConfig","resultList","header","headerHeight","align","rowNum","index","indexHeader","headerBGC","oddRowBGC","evenRowBGC","carousel","components","title","provinceTableDialogVisible","aboutDialogVisible","commonData","basicData","currentConfirmedIncr","confirmedIncr","curedIncr","deadIncr","sure","sureAdd","importedIncr","noInFectIncr","suspectCount","suspectIncr","updateTime","defaultDataConfig","cureRateConfig","shape","deadRateConfig","countryRankingTakeTurnChartConfig","waitTime","unit","valueFormatter","value","reverseNumber","valueStr","seg","provinceConfirmedCountBoardConfig","provinceDataList","trendDataList","confirmedCountList","top10ProvinceData","provinceList","valueList","basicIncrTrendData","dateList","importedIncrDataList","currentConfirmedIncrDataList","confirmSingleBarChartData","currentConfirmedCountList","rate","curedRate","deadRate","areaData","mapDataList","methods","queryBasicData","self","getOverall","then","res","success","console","log","info","setBasicData","queryProvinceDataList","getProvinceDataList","setAreaChartData","setProvinceRankingData","setProvinceComfirmedCountBoardData","setMapData","queryTrendDataList","getDailyList","setBasicIncrTrendData","areaList","dataValueList","i","provinceLabel","currentConfirmedIncrList","importedIncrList","sevenDayDateList","curedCountList","count","noInFectDataList","noInFectCountList","map","item","deadCountList","forEach","dataList","list","name","provinceTableDialogShowHandler","provinceTableDialogClose","aboutDialogShowHandler","aboutDialogClose","config","startQueryData","initAllChart","$refs","dataMap","initChart","confirmedCountTrendChart","topConfirmedCountRankChart","confirmSingleBarChart","basicProportionChart","mounted","timer","setInterval","beforeDestroy","clearInterval"],"sources":["src/views/main-layout.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <!-- 顶部 -->\n    <div class=\"top-header\">\n      <div class=\"title\">\n        <h1>{{ title }}</h1>\n        <div class=\"top-header-tip\">\n          <div class=\"sub-title\">此数据为实时真实数据，数据来源：openrank</div>\n          <div class=\"last-update-time\">\n            更新时间：{{\"2024-07-15 20:39:11\"}}\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"main-content\">\n      <el-row>\n        <el-col :span=\"18\">\n          <!-- 中间信息开始 -->\n          <div class=\"statistics-content\">\n            <!-- 中间左侧开始 -->\n            <div class=\"main-inner\">\n              <el-row>\n                <el-col :span=\"7\">\n                  <chart-card\n                    title=\"贡献者排名（TOP 10）\"\n                    :customClass=\"`chart-item-bottom-sep`\"\n                  >\n                    <province-ranking-bar-chart\n                      ref=\"topConfirmedCountRankChart\"\n                      :data=\"top10ProvinceData\"\n                      style=\"width: 100%; height: 380px\"\n                    />\n                  </chart-card>\n                  <!-- 占比 -->\n                  <chart-card\n                    title=\"语言占比\"\n                    :customClass=\"`chart-item-bottom-sep`\"\n                  >\n                    <basic-proportion-chart\n                      ref=\"basicProportionChart\"\n                      :data=\"basicData\"\n                      style=\"width: 100%; height: 120px\"\n                    />\n                  </chart-card>\n                  <chart-card title=\"issue新增、关闭数量\">\n                    <current-confirmed-compare-bar-chart\n                      ref=\"confirmSingleBarChart\"\n                      :data=\"confirmSingleBarChartData\"\n                      style=\"width: 100%; height: 310px\"\n                    />\n                  </chart-card>\n                </el-col>\n                <el-col :span=\"17\">\n                  <!-- 顶部基本统计信息开始 -->\n                  <div class=\"basic-header flex\">\n                    <!-- 顶部统计信息开始 -->\n                    <div class=\"top-basic-info\">\n                      <basic-data-item-label\n                        label=\"现有仓库\"\n                        :config=\"defaultDataConfig.currentConfirmedCount\"\n                        :inCrValue=\"basicData.currentConfirmedIncr\"\n                      />\n                      <basic-data-item-label\n                        label=\"累计fork\"\n                        :config=\"defaultDataConfig.confirmedCount\"\n                        :inCrValue=\"basicData.confirmedIncr\"\n                      />\n                      <!-- 境外输入 -->\n                      <basic-data-item-label\n                        label=\"累计星级\"\n                        :config=\"defaultDataConfig.importedCount\"\n                        :inCrValue=\"basicData.importedIncr\"\n                      />\n                      <!-- 无症状感染者 -->\n                      <basic-data-item-label\n                        label=\"累计issue\"\n                        :config=\"defaultDataConfig.noInFectCount\"\n                        :inCrValue=\"basicData.noInFectIncr\"\n                      />\n                      <!-- 累计治愈 -->\n                      <basic-data-item-label\n                        label=\"累计pull\"\n                        :config=\"defaultDataConfig.curedCount\"\n                        :inCrValue=\"basicData.curedIncr\"\n                      />\n                      <!-- 死亡人数 -->\n                      <basic-data-item-label\n                        label=\"累计贡献者\"\n                        :config=\"defaultDataConfig.deadCount\"\n                        :inCrValue=\"basicData.deadIncr\"\n                      />\n                    </div>\n                    <!-- 顶部统计信息结束 -->\n                  </div>\n                  <!-- 顶部基本统计信息开始 -->\n                  <div class=\"main-inner-map-wraper\">\n                    <!-- 地图 -->\n                    <div class=\"map\">\n                      <data-map\n                        ref=\"dataMap\"\n                        title=\"\"\n                        :list=\"mapDataList\"\n                        style=\"width: 100%; height: 100%\"\n                      />\n                    </div>\n                  </div>\n                </el-col>\n              </el-row>\n            </div>\n            <!-- 中间左侧结束 -->\n          </div>\n          <!-- 中间信息结束 -->\n        </el-col>\n        <el-col :span=\"6\">\n          <!-- 右侧区域开始 -->\n          <div class=\"main-right\">\n            <Search\n            title=\"搜索框\"\n              :innerClass=\"`cure-and-dead-rate-chart`\"\n              :customClass=\"`chart-item-bottom-sep`\"\n            >\n\n            </Search>\n            <chart-card title=\"\"\n             :customClass=\"`chart-item-bottom-sep`\"\n            >\n              <div slot=\"title\" class=\"province-table-title flex\">\n                仓库排名\n                <el-link\n                  icon=\"el-icon-view\"\n                  style=\"color: #bcbcbf; padding-left: 10px\"\n                  :underline=\"false\"\n                  @click=\"provinceTableDialogShowHandler\"\n                  >详情</el-link\n                >\n              </div>\n               <dv-scroll-board\n                  :config=\"provinceConfirmedCountBoardConfig\"\n                  style=\"width: 100%; height: 360px\" \n                />\n            </chart-card>\n\n            <chart-card title=\"pull处理\" :customClass=\"`chart-item-bottom-sep`\">\n              <basic-trend-chart\n                :data=\"basicIncrTrendData\"\n                ref=\"confirmedCountTrendChart\"\n                style=\"width: 100%; height: 520px\"\n              />\n            </chart-card>\n\n          </div>\n          <!-- 右侧区域结束 -->\n        </el-col>\n      </el-row>\n    </div>\n    <!-- 其他页面 -->\n    <div class=\"province-data-table-wrapper\">\n      <el-dialog\n        :visible.sync=\"provinceTableDialogVisible\"\n        width=\"50%\"\n        :before-close=\"provinceTableDialogClose\"\n      >\n        <div slot=\"title\" class=\"province-data-modal-title\">\n          <p>各省数据表</p>\n          <span class=\"province-data-modal-update-time\"\n            >（更新时间：{{ basicData.updateTime }}）</span\n          >\n        </div>\n        <div class=\"area-data-table-wrapper\">\n          <el-table\n            class=\"area-data-table\"\n            :data=\"provinceDataList\"\n            style=\"width: 100%\"\n          >\n            <el-table-column prop=\"provinceLabel\" align=\"center\" label=\"省份\">\n            </el-table-column>\n            <el-table-column\n              prop=\"confirmedCount\"\n              align=\"center\"\n              label=\"累计确诊\"\n            >\n            </el-table-column>\n            <el-table-column\n              prop=\"currentConfirmedCount\"\n              align=\"center\"\n              label=\"现有确诊\"\n            >\n            </el-table-column>\n            <el-table-column prop=\"curedCount\" align=\"center\" label=\"累计治愈\">\n            </el-table-column>\n            <el-table-column prop=\"deadCount\" align=\"center\" label=\"累计死亡\">\n            </el-table-column>\n          </el-table>\n        </div>\n      </el-dialog>\n      <!-- 关于弹窗 -->\n      <el-dialog\n        title=\"关于\"\n        :visible.sync=\"aboutDialogVisible\"\n        width=\"30%\"\n        :before-close=\"aboutDialogClose\"\n      >\n     \n      </el-dialog>\n      <!-- 关于图标 -->\n      <div class=\"about-wraper\">\n        <i\n          class=\"el-icon-info\"\n          style=\"font-size: 30px\"\n          @click=\"aboutDialogShowHandler\"\n        ></i>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport ChartCard from '../components/ChartCard'\nimport Search from '../components/Search'\nimport DataMap from '../components/DataMap'\nimport CuredAndDeadRateChart from '../components/CuredAndDeadRateChart'\nimport BasicDataItemLabel from '../components/BasicDataItemLabel'\nimport BasicTrendChart from '../components/BasicTrendChart'\nimport ProvinceRankingBarChart from '../components/ProvinceRankingBarChart'\nimport CurrentConfirmedCompareBarChart from '../components/CurrentConfirmedCompareBarChart'\n\nimport BasicProportionChart from '../components/BasicProportionChart'\n\nimport covid19Service from '../api/covid19'\n\nconst formatter = (number) => {\n  const numbers = number.toString().split('').reverse()\n  const segs = []\n  while (numbers.length) segs.push(numbers.splice(0, 3).join(''))\n  return segs.join(',').split('').reverse().join('')\n}\n// 数据样式\nconst getNumberStyle = (color = '#E8EAF6', fontSize = 30, fontWeight = 'bolder') => {\n  return {\n    fontSize: fontSize,\n    fill: color,\n    fontWeight: fontWeight\n  }\n}\n\nconst initBasicConfig = (data = null) => {\n  let currentConfirmedCount = data ? [data.currentConfirmedCount] : 0\n  let confirmedCount = data ? [data.confirmedCount] : 0\n  let importedCount = data ? [data.importedCount] : 0\n  let noInFectCount = data ? [data.noInFectCount] : 0\n  let deadCount = data ? [data.deadCount] : 0\n  let curedCount = data ? [data.curedCount] : 0\n  return {\n    confirmedCount: {\n      number: [confirmedCount],\n      content: '{nt}',\n      formatter,\n      style: getNumberStyle()\n    },\n    currentConfirmedCount: {\n      number: [currentConfirmedCount],\n      content: '{nt}',\n      formatter,\n      style: getNumberStyle('#2E8EEA')\n    },\n    importedCount: {\n      number: [importedCount],\n      content: '{nt}',\n      formatter,\n      style: getNumberStyle()\n    },\n    noInFectCount: {\n      number: [noInFectCount],\n      content: '{nt}',\n      formatter,\n      style: getNumberStyle()\n    },\n    deadCount: {\n      number: [deadCount],\n      content: '{nt}',\n      formatter,\n      style: getNumberStyle('#D32E58')\n    },\n    curedCount: {\n      number: [curedCount],\n      content: '{nt}',\n      formatter,\n      style: getNumberStyle()\n    }\n  }\n}\n\nconst initProvinceConfirmedCountBoardConfig = (resultList = []) => {\n  return {\n    header: ['仓库', '累计fork', 'issue数', 'pull数'],\n    headerHeight: 30,\n    data: resultList,\n    align: ['center'],\n    rowNum: 10,\n    index: true,\n    indexHeader: '排名',\n    headerBGC: '',\n    oddRowBGC: '',\n    evenRowBGC: '',\n    carousel: 'single'\n  }\n}\nexport default {\n  components: {\n    Search,\n    ChartCard,\n    DataMap,\n    CuredAndDeadRateChart,\n    BasicDataItemLabel,\n    BasicTrendChart,\n    ProvinceRankingBarChart,\n    CurrentConfirmedCompareBarChart,\n    BasicProportionChart\n  },\n  data () {\n    return {\n      title: 'OpenRank可视化大屏',\n      provinceTableDialogVisible: false,\n      aboutDialogVisible: false,\n      commonData: {},\n      basicData: {\n        currentConfirmedCount: 0,\n        currentConfirmedIncr: 0,\n        confirmedCount: 0,\n        confirmedIncr: 0,\n        curedCount: 0,\n        curedIncr: 0,\n        deadCount: 0,\n        deadIncr: 0,\n        sure: 0,\n        sureAdd: 0,\n        importedCount: 0,\n        importedIncr: 0,\n        noInFectCount: 0,\n        noInFectIncr: 0,\n        suspectCount: 0,\n        suspectIncr: 0,\n        updateTime: '-'\n      },\n      defaultDataConfig: initBasicConfig(),\n      cureRateConfig: {\n        data: [0],\n        shape: 'round'\n      },\n      deadRateConfig: {\n        data: [0],\n        shape: 'round'\n      },\n      countryRankingTakeTurnChartConfig: {\n        data: [],\n        waitTime: 2000,\n        unit: '单位',\n        valueFormatter ({ value }) {\n          const reverseNumber = (value + '').split('').reverse()\n          let valueStr = ''\n\n          while (reverseNumber.length) {\n            const seg = reverseNumber.splice(0, 3).join('')\n            valueStr += seg\n            if (seg.length === 3) valueStr += ','\n          }\n\n          return valueStr.split('').reverse().join('')\n        }\n      },\n      provinceConfirmedCountBoardConfig: initProvinceConfirmedCountBoardConfig(),\n      provinceDataList: [],\n      trendDataList: [],\n      confirmedCountList: [],\n      top10ProvinceData: {\n        provinceList: [],\n        valueList: []\n      },\n      basicIncrTrendData: {\n        dateList: [],\n        importedIncrDataList: [],\n        currentConfirmedIncrDataList: []\n      },\n      confirmSingleBarChartData: {\n        dateList: [],\n        currentConfirmedCountList: [],\n        confirmedCountList: []\n      },\n      rate: {\n        curedRate: 0,\n        deadRate: 0\n      },\n      areaData: {},\n      mapDataList: []\n    }\n  },\n  methods: {\n    queryBasicData () {\n      let self = this\n      covid19Service.getOverall().then((res) => {\n        if (!res.success) {\n          console.log('错误:' + res.info)\n          return\n        }\n        self.basicData = res.data\n        self.setBasicData(res.data)\n      })\n    },\n    queryProvinceDataList () {\n      let self = this\n      covid19Service.getProvinceDataList().then((res) => {\n        if (!res.success) {\n          // TODO 错误处理...\n          console.log('错误:' + res.info)\n          return\n        }\n        self.provinceDataList = res.data\n        self.setAreaChartData(res.data)\n        // 设置累计排名数据\n        self.setProvinceRankingData(res.data)\n        // 设置各省累计确诊轮播表格数据\n        self.setProvinceComfirmedCountBoardData(res.data)\n        // 设置地图数据\n        self.setMapData(res.data)\n      })\n    },\n    queryTrendDataList () {\n      let self = this\n      covid19Service.getDailyList().then((res) => {\n        if (!res.success) {\n          // TODO 错误处理...\n          console.log('错误:' + res.info)\n          return\n        }\n        self.trendDataList = res.data\n        // 重置图表数据\n        self.setBasicIncrTrendData(res.data)\n      })\n    },\n    setProvinceRankingData (areaList) {\n      let provinceList = []\n      let dataValueList = []\n      for (let i = 0; i < 10; i++) {\n        provinceList.push(areaList[i].provinceLabel)\n        dataValueList.push(areaList[i].confirmedCount)\n      }\n      let data = {\n        provinceList: provinceList,\n        valueList: dataValueList\n      }\n      this.top10ProvinceData = data\n    },\n    setBasicIncrTrendData (data) {\n      let dateList = []\n      let currentConfirmedIncrList = []\n      let importedIncrList = []\n\n      let sevenDayDateList = []\n      // 仅显示一周条数据\n      let confirmedCountList = []\n      let curedCountList = []\n      // 仅获取7条数据\n      let count = 7\n      let noInFectDataList = []\n\n      for (let i = data.currentConfirmedIncrList.length - 1; i >= 0; i--) {\n        dateList.push(data.currentConfirmedIncrList[i][0])\n        currentConfirmedIncrList.push(data.currentConfirmedIncrList[i][1])\n      }\n      for (let i = data.importedIncrList.length - 1; i >= 0; i--) {\n        importedIncrList.push(data.importedIncrList[i][1])\n      }\n      for (let i = data.noInFectCountList.length - 1; i >= 0; i--) {\n        noInFectDataList.push(data.noInFectCountList[i][1])\n      }\n\n      for (let i = count; i >= 0; i--) {\n        if (confirmedCountList.length >= count) {\n          break\n        }\n        sevenDayDateList.push(data.confirmedCountList[i][0])\n        confirmedCountList.push(data.confirmedCountList[i][1])\n      }\n      for (let i = count; i >= 0; i--) {\n        if (curedCountList.length >= count) {\n          break\n        }\n        curedCountList.push(data.curedCountList[i][1])\n      }\n\n      this.basicIncrTrendData = {\n        dateList: dateList,\n        importedIncrDataList: importedIncrList,\n        currentConfirmedIncrDataList: currentConfirmedIncrList,\n        noInFectDataList: noInFectDataList\n      }\n      this.confirmSingleBarChartData = {\n        dateList: sevenDayDateList,\n        curedCountList: curedCountList,\n        confirmedCountList: confirmedCountList\n      }\n    },\n    setProvinceComfirmedCountBoardData (areaList) {\n      let resultList = areaList.map(item => {\n        return [item.provinceLabel, item.confirmedCount, item.curedCount, item.deadCount]\n      })\n      // 重新生成，否则无法刷新状态\n      this.provinceConfirmedCountBoardConfig = initProvinceConfirmedCountBoardConfig(resultList)\n    },\n    setAreaChartData (areaList) {\n      let confirmedCountList = []\n      let provinceList = []\n      let curedCountList = []\n      let deadCountList = []\n      areaList.forEach(item => {\n        provinceList.push(item.provinceLabel)\n        confirmedCountList.push(item.confirmedCount)\n        curedCountList.push(item.curedCount)\n        deadCountList.push(item.deadCount)\n      })\n      this.areaData = {\n        provinceList: provinceList,\n        confirmedCountList: confirmedCountList,\n        curedCountList: curedCountList,\n        deadCountList: deadCountList\n      }\n    },\n    setMapData (dataList) {\n      let list = dataList.map(item => {\n        return {\n          name: item.provinceLabel,\n          value: item.confirmedCount\n        }\n      })\n      this.mapDataList = list\n    },\n    provinceTableDialogShowHandler () {\n      this.provinceTableDialogVisible = true\n    },\n    provinceTableDialogClose () {\n      this.provinceTableDialogVisible = false\n    },\n    aboutDialogShowHandler () {\n      this.aboutDialogVisible = true\n    },\n    aboutDialogClose () {\n      this.aboutDialogVisible = false\n    },\n    setBasicData (data) {\n      // 重新生成，否则视图不更新\n      let config = initBasicConfig(data)\n      this.defaultDataConfig = config\n      // 处理治愈率和死亡率\n      this.rate = {\n        curedRate: data.curedRate / 100,\n        deadRate: data.deadRate / 100\n      }\n    },\n    startQueryData () {\n      this.queryBasicData()\n      this.queryProvinceDataList()\n      this.queryTrendDataList()\n    },\n    initAllChart() {\n      this.$refs.dataMap.initChart()\n      // this.$refs.cureRateChart.initChart()\n      this.$refs.confirmedCountTrendChart.initChart()\n      this.$refs.topConfirmedCountRankChart.initChart()\n      this.$refs.confirmSingleBarChart.initChart()\n      this.$refs.basicProportionChart.initChart()\n    }\n  },\n  mounted () {\n    this.initAllChart()\n    this.startQueryData()\n\n    let self = this\n    // 定义定时器，隔 5 秒刷新一次\n    this.timer = setInterval(() => {\n      self.startQueryData()\n    }, 5000)\n  },\n  beforeDestroy() {\n    clearInterval(this.timer)\n  }\n}\n</script>\n<style>\n\n.container {\n  position: relative;\n}\nh1 {\n  font-size: 35px;\n  font-weight: bold;\n  padding: 20px;\n}\n.flex {\n  display: flex;\n}\n.top-header {\n  position: relative;\n  margin-bottom: 10px;\n}\n.top-header-tip {\n  font-size: 14px;\n  position: absolute;\n  padding: 20px 20px;\n  text-align: right;\n  top: 0;\n  right: 0;\n}\n.title {\n  min-width: 350px;\n}\n.chart-card {\n  background: #0f142b;\n  border-radius: 10px;\n  margin: 0 20px;\n}\n.main-inner-map-wraper {\n  height: 100%;\n  margin: 0 20px;\n}\n.map {\n  width: 99%;\n  height: 840px;\n  padding: 20px 10px 10px 10px;\n}\n.province-scroll-board-wrapper {\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n.chart-item-bottom-sep {\n  margin-bottom: 20px;\n}\n.province-table-title {\n  color: #fff;\n  font-size: 16px;\n  font-weight: bold;\n  padding: 10px 10px 10px 20px;\n  text-align: left;\n}\n.basic-incr-trend-chart-wrapper {\n  padding-bottom: 10px;\n}\n.sub-title,\n.last-update-time,\n.province-scroll-board-wrapper ::v-deep .dv-scroll-board .header,\n.province-scroll-board-wrapper ::v-deep .dv-scroll-board .rows {\n  font-size: 14px;\n}\n.province-scroll-board-wrapper ::v-deep .dv-scroll-board .rows {\n  color: #bcbcbf;\n}\n.province-data-modal-title {\n  color: #000;\n  font-size: 20px;\n  font-weight: bold;\n}\n.province-data-modal-update-time {\n  color: #58585a;\n  font-size: 16px;\n  font-weight: normal;\n  padding-top: 10px;\n  display: block;\n}\n.cure-and-dead-rate-chart {\n  display: flex;\n  justify-content: space-around;\n}\n.top-basic-info {\n  display: flex;\n}\n.dv-scroll-ranking-board .ranking-column .inside-column {\n  background: linear-gradient(90deg, #29bfff, #a231ff, #0deccd, #29bfff);\n}\n.chart-item-container {\n  margin: 0 10px;\n}\n.about-wraper {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n}\n</style>"],"mappings":"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","ignoreList":[]}]}