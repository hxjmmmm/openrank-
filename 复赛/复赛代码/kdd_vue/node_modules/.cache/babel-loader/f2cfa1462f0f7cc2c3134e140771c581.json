{"remainingRequest":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sa\\Desktop\\openrank\\08\\src\\views\\main-layout.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\src\\views\\main-layout.vue","mtime":1735729007514},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\babel.config.js","mtime":1638539142000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\babel-loader\\lib\\index.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1734174292000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ChartCard","Search","DataMap","CuredAndDeadRateChart","BasicDataItemLabel","BasicTrendChart","ProvinceRankingBarChart","CurrentConfirmedCompareBarChart","axios","BasicProportionChart","covid19Service","formatter","number","numbers","toString","split","reverse","segs","length","push","splice","join","getNumberStyle","color","fontSize","fontWeight","fill","initBasicConfig","data","currentConfirmedCount","clickCount","confirmedCount","maxForks","importedCount","maxStars","noInFectCount","totalIssues","deadCount","totalContributors","curedCount","totalPulls","content","style","initProvinceConfirmedCountBoardConfig","resultList","header","headerHeight","align","rowNum","index","indexHeader","headerBGC","oddRowBGC","evenRowBGC","carousel","components","title","pojoname","provinceTableDialogVisible","aboutDialogVisible","commonData","sumIssue","time","issuesCreated","issuesClosed","nodes1","links1","sumOpenRank","basicData","currentConfirmedIncr","confirmedIncr","curedIncr","deadIncr","sure","sureAdd","importedIncr","noInFectIncr","suspectCount","suspectIncr","updateTime","defaultDataConfig","cureRateConfig","shape","deadRateConfig","countryRankingTakeTurnChartConfig","waitTime","unit","valueFormatter","value","reverseNumber","valueStr","seg","provinceConfirmedCountBoardConfig","provinceDataList","wareHouseList","trendDataList","confirmedCountList","issueTime","pullsCreated","pullsMerged","processingEfficiency","languageProportions","top10ProvinceData","provinceList","valueList","basicIncrTrendData","dateList","importedIncrDataList","currentConfirmedIncrDataList","confirmSingleBarChartData","currentConfirmedCountList","rate","curedRate","deadRate","areaData","methods","generateRandomLanguageProportions","languages","selectedLanguages","sort","Math","random","slice","proportions","map","floor","total","reduce","acc","val","adjustedProportions","roundedValue","round","language","searchPojoname","IfPojo","queryDataPullList","queryKddDataList","querySumDataList","queryIssueSum","queryNodeLinks","queryWareHouseList","self","get","then","res","console","log","JSON","stringify","code","setBasicData","links","nodes","setProvinceComfirmedCountBoardData","kdd","location","reload","queryBasicData","getOverall","success","info","queryProvinceDataList","getProvinceDataList","setAreaChartData","setProvinceRankingData","queryTrendDataList","getDailyList","setBasicIncrTrendData","currentConfirmedIncrList","importedIncrList","sevenDayDateList","curedCountList","count","noInFectDataList","i","noInFectCountList","areaList","item","repoName","openvalue","deadCountList","forEach","provinceLabel","provinceTableDialogShowHandler","provinceTableDialogClose","aboutDialogShowHandler","aboutDialogClose","config","startQueryData","initAllChart","$refs","dataMap","initChart","confirmedCountTrendChart","topConfirmedCountRankChart","confirmSingleBarChart","basicProportionChart","mounted","timer","setInterval","beforeDestroy","clearInterval"],"sources":["src/views/main-layout.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <!-- 顶部 -->\n    <div class=\"top-header\">\n      <div class=\"title\">\n        <h1>{{ title }}</h1>\n        <div class=\"top-header-tip\">\n          <div class=\"sub-title\">此数据为实时真实数据，数据来源：openrank</div>\n          <div class=\"last-update-time\">\n            更新时间：{{ \"2024-12-15 20:39:11\" }}\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"main-content\">\n      <el-row>\n        <el-col :span=\"18\">\n          <!-- 中间信息开始 -->\n          <div class=\"statistics-content\">\n            <!-- 中间左侧开始 -->\n            <div class=\"main-inner\">\n              <el-row>\n                <el-col :span=\"7\">\n                  <chart-card\n                    title=\"贡献者排名（TOP 10）\"\n                    :customClass=\"`chart-item-bottom-sep`\"\n                  >\n                    <province-ranking-bar-chart\n                      ref=\"topConfirmedCountRankChart\"\n                      :data=\"top10ProvinceData\"\n                      style=\"width: 100%; height: 32vh\"\n                    />\n                  </chart-card>\n                  <!-- 占比 -->\n                  <chart-card\n                    title=\"语言占比\"\n                    :customClass=\"`chart-item-bottom-sep`\"\n                  >\n                    <basic-proportion-chart\n                      ref=\"basicProportionChart\"\n                      :languageProportions=\"languageProportions\"\n                       \n                      style=\"width: 100%; height: 10vh\"\n                    />\n                  </chart-card>\n                  <chart-card title=\"issue新增、关闭数量\">\n                    <current-confirmed-compare-bar-chart\n                      ref=\"confirmSingleBarChart\"\n                      :issueTime=\"issueTime\"\n                      :issuesCreated=\"issuesCreated\"\n                      :issuesClosed=\"issuesClosed\"\n                      style=\"width: 100%; height: 36vh\"\n                    />\n                  </chart-card>\n                </el-col>\n                <el-col :span=\"17\">\n                  <!-- 顶部基本统计信息开始 -->\n                  <div class=\"basic-header \">\n                    <!-- 顶部统计信息开始 -->\n                    <div class=\"top-basic-info\">\n                      <basic-data-item-label\n                        label=\"点击数\"\n                        :config=\"defaultDataConfig.currentConfirmedCount\"\n                        :inCrValue=\"basicData.currentConfirmedIncr\"\n                      />\n                      <basic-data-item-label\n                        label=\"累计fork\"\n                        :config=\"defaultDataConfig.confirmedCount\"\n                        :inCrValue=\"basicData.confirmedIncr\"\n                      />\n                      <!-- 境外输入 -->\n                      <basic-data-item-label\n                        label=\"累计星级\"\n                        :config=\"defaultDataConfig.importedCount\"\n                        :inCrValue=\"basicData.importedIncr\"\n                      />\n                      <!-- 无症状感染者 -->\n                      <basic-data-item-label\n                        label=\"累计issue\"\n                        :config=\"defaultDataConfig.noInFectCount\"\n                        :inCrValue=\"basicData.noInFectIncr\"\n                      />\n                      <!-- 累计治愈 -->\n                      <basic-data-item-label\n                        label=\"累计pull\"\n                        :config=\"defaultDataConfig.curedCount\"\n                        :inCrValue=\"basicData.curedIncr\"\n                      />\n                      <!-- 死亡人数 -->\n                      <basic-data-item-label\n                        label=\"累计贡献者\"\n                        :config=\"defaultDataConfig.deadCount\"\n                        :inCrValue=\"basicData.deadIncr\"\n                      />\n                    </div>\n                    <!-- 顶部统计信息结束 -->\n                  </div>\n                  <!-- 顶部基本统计信息开始 -->\n                  <div class=\"main-inner-map-wraper\">\n                    <!-- 网络 -->\n                    <div class=\"map\">\n                      <data-map\n                        ref=\"dataMap\"\n                        title=\"\"\n                        :nodes2=\"nodes1\"\n                        :links2=\"links1\"\n                        style=\"width: 100%; height: 100%\"\n                      />\n                    </div>\n                  </div>\n                </el-col>\n              </el-row>\n            </div>\n            <!-- 中间左侧结束 -->\n          </div>\n          <!-- 中间信息结束 -->\n        </el-col>\n        <el-col :span=\"6\">\n          <!-- 右侧区域开始 -->\n          <div class=\"main-right\">\n            \n              <!-- 新增搜索框 -->\n              <div class=\"search-container\">\n                <input\n                  type=\"text\"\n                  placeholder=\"搜索仓库\"\n                  class=\"search-input\"\n                  v-model=\"pojoname\"\n                  @keyup.enter=\"searchPojoname\"\n                /> <i class=\"el-icon-search\"></i>\n              </div>\n            <chart-card title=\"\" :customClass=\"`chart-item-bottom-sep`\">\n              <div slot=\"title\" class=\"province-table-title flex\">\n                仓库排名\n                <el-link\n                  icon=\"el-icon-view\"\n                  style=\"color: #bcbcbf; padding-left: 1vw;\"\n                  :underline=\"false\"\n                  @click=\"provinceTableDialogShowHandler\"\n                  >详情</el-link\n                >\n              </div>\n              <dv-scroll-board\n                :config=\"provinceConfirmedCountBoardConfig\"\n                style=\"width: 100%; height: 36vh\"\n              />\n            </chart-card>\n\n            <chart-card title=\"pull处理\" :customClass=\"`chart-item-bottom-sep`\">\n              <basic-trend-chart\n                data=\"basicIncrTrendData\"\n                :time=\"time\"\n                :pullsCreated=\"pullsCreated\"\n                :pullsMerged=\"pullsMerged\"\n                :processingEfficiency=\"processingEfficiency\"\n                ref=\"confirmedCountTrendChart\"\n                style=\"width: 100%; height: 40vh\"\n              />\n            </chart-card>\n          </div>\n          <!-- 右侧区域结束 -->\n        </el-col>\n      </el-row>\n    </div>\n    <!-- 其他页面 -->\n    <div class=\"province-data-table-wrapper\">\n      <el-dialog\n        :visible.sync=\"provinceTableDialogVisible\"\n        width=\"50%\"\n        :before-close=\"provinceTableDialogClose\"\n      >\n        <div slot=\"title\" class=\"province-data-modal-title\">\n          <p>仓库排行榜</p>\n          <span class=\"province-data-modal-update-time\"\n            >（更新时间：2024-12-15 20:39:11）</span\n          >\n        </div>\n        <div class=\"area-data-table-wrapper\">\n          <el-table\n            class=\"area-data-table\"\n            :data=\"wareHouseList\"\n            style=\"width: 100%\"\n          >\n            <el-table-column prop=\"repoName\" align=\"center\" label=\"仓库排名\">\n            </el-table-column>\n            <el-table-column prop=\"maxStars\" align=\"center\" label=\"累计星值\">\n            </el-table-column>\n            <el-table-column prop=\"maxForks\" align=\"center\" label=\"累计Forks值\">\n            </el-table-column>\n            <el-table-column prop=\"openvalue\" align=\"center\" label=\"openRank值\">\n            </el-table-column>\n            <!-- <el-table-column prop=\"deadCount\" align=\"center\" label=\"累计死亡\">\n            </el-table-column> -->\n          </el-table>\n        </div>\n      </el-dialog>\n      <!-- 关于弹窗 -->\n      <el-dialog\n        title=\"关于\"\n        :visible.sync=\"aboutDialogVisible\"\n        width=\"30%\"\n        :before-close=\"aboutDialogClose\"\n      >\n      </el-dialog>\n      <!-- 关于图标 -->\n      <div class=\"about-wraper\">\n        <i\n          class=\"el-icon-info\"\n          style=\"font-size: 30px\"\n          @click=\"aboutDialogShowHandler\"\n        ></i>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport ChartCard from \"../components/ChartCard\";\nimport Search from \"../components/Search\";\nimport DataMap from \"../components/DataMap\";\nimport CuredAndDeadRateChart from \"../components/CuredAndDeadRateChart\";\nimport BasicDataItemLabel from \"../components/BasicDataItemLabel\";\nimport BasicTrendChart from \"../components/BasicTrendChart\";\nimport ProvinceRankingBarChart from \"../components/ProvinceRankingBarChart\";\nimport CurrentConfirmedCompareBarChart from \"../components/CurrentConfirmedCompareBarChart\";\nimport axios from \"axios\";\nimport BasicProportionChart from \"../components/BasicProportionChart\";\n\nimport covid19Service from \"../api/covid19\";\n\nconst formatter = (number) => {\n  const numbers = number.toString().split(\"\").reverse();\n  const segs = [];\n  while (numbers.length) segs.push(numbers.splice(0, 3).join(\"\"));\n  return segs.join(\",\").split(\"\").reverse().join(\"\");\n};\n// 数据样式\nconst getNumberStyle = (\n  color = \"#E8EAF6\",\n  fontSize = 30,\n  fontWeight = \"bolder\"\n) => {\n  return {\n    fontSize: fontSize,\n    fill: color,\n    fontWeight: fontWeight,\n  };\n};\n\nconst initBasicConfig = (data = null) => {\n  let currentConfirmedCount = data ? [data.clickCount] : 0;\n  let confirmedCount = data ? [data.maxForks] : 0;\n  let importedCount = data ? [data.maxStars] : 0;\n  let noInFectCount = data ? [data.totalIssues] : 0;\n  let deadCount = data ? [data.totalContributors] : 0;\n  let curedCount = data ? [data.totalPulls] : 0;\n  return {\n    confirmedCount: {\n      number: [confirmedCount],\n      content: \"{nt}\",\n      formatter,\n      style: getNumberStyle(),\n    },\n    currentConfirmedCount: {\n      number: [currentConfirmedCount],\n      content: \"{nt}\",\n      formatter,\n      style: getNumberStyle(\"#2E8EEA\"),\n    },\n    importedCount: {\n      number: [importedCount],\n      content: \"{nt}\",\n      formatter,\n      style: getNumberStyle(),\n    },\n    noInFectCount: {\n      number: [noInFectCount],\n      content: \"{nt}\",\n      formatter,\n      style: getNumberStyle(),\n    },\n    deadCount: {\n      number: [deadCount],\n      content: \"{nt}\",\n      formatter,\n      style: getNumberStyle(\"#D32E58\"),\n    },\n    curedCount: {\n      number: [curedCount],\n      content: \"{nt}\",\n      formatter,\n      style: getNumberStyle(),\n    },\n  };\n};\n\nconst initProvinceConfirmedCountBoardConfig = (resultList = []) => {\n  return {\n    header: [\"仓库\", \"fork值\", \"Star\", \"openRank\"],\n    headerHeight: 30,\n    data: resultList,\n    align: [\"center\"],\n    rowNum: 10,\n    index: true,\n    indexHeader: \"排名\",\n    headerBGC: \"\",\n    oddRowBGC: \"\",\n    evenRowBGC: \"\",\n    carousel: \"single\",\n  };\n};\nexport default {\n  components: {\n    Search,\n    ChartCard,\n    DataMap,\n    CuredAndDeadRateChart,\n    BasicDataItemLabel,\n    BasicTrendChart,\n    ProvinceRankingBarChart,\n    CurrentConfirmedCompareBarChart,\n    BasicProportionChart,\n  },\n  data() {\n    return {\n      title: \"OpenRank可视化大屏\",\n      pojoname: \"NixOS\", // 新增pojoname属性\n      provinceTableDialogVisible: false,\n      aboutDialogVisible: false,\n      commonData: {},\n      sumIssue: {\n        time: [],\n        issuesCreated: [],\n        issuesClosed: [],\n      },\n      nodes1: [],\n      links1: [],\n      sumOpenRank: {\n        clickCount: 0,\n        maxForks: 0,\n        maxStars: 0,\n        totalIssues: 0,\n        totalPulls: 0,\n        totalContributors: 0,\n      },\n      basicData: {\n        currentConfirmedCount: 0,\n        currentConfirmedIncr: 0,\n        confirmedCount: 0,\n        confirmedIncr: 0,\n        curedCount: 0,\n        curedIncr: 0,\n        deadCount: 0,\n        deadIncr: 0,\n        sure: 0,\n        sureAdd: 0,\n        importedCount: 0,\n        importedIncr: 0,\n        noInFectCount: 0,\n        noInFectIncr: 0,\n        suspectCount: 0,\n        suspectIncr: 0,\n        updateTime: \"-\",\n      },\n      defaultDataConfig: initBasicConfig(),\n      cureRateConfig: {\n        data: [0],\n        shape: \"round\",\n      },\n      deadRateConfig: {\n        data: [0],\n        shape: \"round\",\n      },\n      countryRankingTakeTurnChartConfig: {\n        data: [],\n        waitTime: 2000,\n        unit: \"单位\",\n        valueFormatter({ value }) {\n          const reverseNumber = (value + \"\").split(\"\").reverse();\n          let valueStr = \"\";\n\n          while (reverseNumber.length) {\n            const seg = reverseNumber.splice(0, 3).join(\"\");\n            valueStr += seg;\n            if (seg.length === 3) valueStr += \",\";\n          }\n\n          return valueStr.split(\"\").reverse().join(\"\");\n        },\n      },\n      provinceConfirmedCountBoardConfig:\n        initProvinceConfirmedCountBoardConfig(),\n      provinceDataList: [],\n      wareHouseList: [],\n      trendDataList: [],\n      confirmedCountList: [],\n      issueTime: [],\n      issuesCreated: [],\n      issuesClosed: [],\n      time: [],\n      pullsCreated: [],\n      pullsMerged: [],\n      processingEfficiency: [],\n      languageProportions:[],\n      top10ProvinceData: {\n        provinceList: [],\n        valueList: [],\n      },\n      basicIncrTrendData: {\n        dateList: [],\n        importedIncrDataList: [],\n        currentConfirmedIncrDataList: [],\n      },\n      confirmSingleBarChartData: {\n        dateList: [\"09-30\", \"10-30\", \"11-3\", \"11-4\", \"11-5\", \"11-6\", \"11-7\"],\n        currentConfirmedCountList: [500, 210, 260, 350, 150, 650, 20], //新增\n        confirmedCountList: [122, 234, 500, 300, 280, 350, 600], //关闭\n      },\n      rate: {\n        curedRate: 0,\n        deadRate: 0,\n      },\n      areaData: {},\n    };\n  },\n  methods: {\n    generateRandomLanguageProportions() {\n      \n      const languages = ['Java', 'C++', 'Python', 'JavaScript', 'Ruby', 'PHP', 'Go', 'Swift', 'Kotlin', 'TypeScript'];\n      const selectedLanguages = languages.sort(() => 0.5 - Math.random()).slice(0, 3); // 随机选择三种语言\n    \n      let proportions = selectedLanguages.map(() => Math.floor(Math.random() * 30) + 1); // 为每种语言生成1到30的随机数\n    \n      // 计算所有随机数的总和\n      const total = proportions.reduce((acc, val) => acc + val, 0);\n    \n      // 将每个随机数转换为相对于总和的百分比\n      proportions = proportions.map(value => (value / total) * 100);\n    \n      // 四舍五入到最接近的整数，并确保总和为100%\n      let adjustedProportions = proportions.map((value, index) => {\n        const roundedValue = Math.round(value);\n        if (index === proportions.length - 1) {\n          return 100 - proportions.slice(0, -1).reduce((acc, val) => acc + Math.round(val), 0);\n        }\n        return roundedValue;\n      });\n    \n      this.languageProportions = adjustedProportions.map((value, index) => ({\n        language: selectedLanguages[index],\n        value: value\n      }));\n    },\n    // ...其他方法\n  searchPojoname() {\n    this.IfPojo(this.pojoname);\n    //this.pojoname 的值，\n    // 调用接口，如果不属于仓库数据,默认值返回为NixOS\n    this.queryDataPullList(this.pojoname);\n    this.queryKddDataList(this.pojoname);\n    this.querySumDataList(this.pojoname);\n    this.queryIssueSum(this.pojoname);\n    this.queryNodeLinks(this.pojoname);\n    this.generateRandomLanguageProportions();\n    this.queryWareHouseList();\n \n  },\n    queryKddDataList(pojoname) {\n     \n      let self = this;\n      axios.get(`/api/Contributer/${pojoname}`).then((res) => {\n        this.top10ProvinceData = res.data.data;\n          console.log(JSON.stringify(res.data)+\"&&&&&&&&&&&&&&&&&&&&&&&&&&\")\n        if (res.data == 0) {\n        } else {\n        }\n      });\n    },\n    querySumDataList(pojoname) {\n      let self = this;\n      axios.get(`/api/sumOpenRank/${pojoname}`).then((res) => {\n        if (res.data.code == 1) {\n          self.setBasicData(res.data.data);\n        } else {\n        }\n      });\n    },\n    queryIssueSum(pojoname) {\n      let self = this;\n      axios.get(`/api/IssueOpenRank/${pojoname}`).then((res) => {\n        this.issueTime = res.data.data.time;\n        this.issuesCreated = res.data.data.issuesCreated;\n        this.issuesClosed = res.data.data.issuesClosed;\n        console.log(\n          JSON.stringify(res.data.data) +\n            \"queryIssueSumqueryIssueSumqueryIssueSum\"\n        );\n        // this.sumIssue = res.data.data;\n        if (res.data == 0) {\n        } else {\n        }\n      });\n    },\n    queryNodeLinks(pojoname) {\n      let self = this;\n      axios.get(`/api/NodeLinks/${pojoname}`).then((res) => {\n        // console.log(JSON.stringify(res.data.data.nodes))\n        self.links1 = res.data.data.links;\n        self.nodes1 = res.data.data.nodes;\n        //console.log(\"nodes\"+JSON.stringify(this.nodes1)+\"links\")\n        //console.log(self.nodes+\"sasasa\")\n      });\n    },\n    queryWareHouseList() {\n      let self = this;\n      axios.get(\"/api/queryWareHouseList\").then((res) => {\n        self.setProvinceComfirmedCountBoardData(res.data);\n        self.wareHouseList = res.data;\n      });\n   },\n    queryDataPullList(pojoname) {\n      let self = this;\n      axios.get(`/api/pullList/${pojoname}`).then((res) => {\n         if(res.data.data.kdd<1) {\n          location.reload()\n         }\n        this.time = res.data.data.dateList;\n        this.pullsCreated = res.data.data.pullsCreated;\n        this.pullsMerged = res.data.data.pullsMerged;\n        this.processingEfficiency = res.data.data.processingEfficiency;\n      });\n    },\n    IfPojo(pojoname){\n    \n      let self = this;\n      axios.get(`/api/IfPojo/${pojoname}`).then((res) => {\n       \n      });\n    },\n    queryBasicData() {\n      let self = this;\n      covid19Service.getOverall().then((res) => {\n        if (!res.success) {\n          console.log(\"错误:\" + res.info);\n          return;\n        }\n        self.basicData = res.data;\n        // self.setBasicData(res.data);\n      });\n    },\n    queryProvinceDataList() {\n      let self = this;\n      covid19Service.getProvinceDataList().then((res) => {\n        if (!res.success) {\n          // TODO 错误处理...\n          console.log(\"错误:\" + res.info);\n          return;\n        }\n        // 设置详情页数据排名\n        self.setAreaChartData(res.data);\n        // 设置累计排名数据\n        self.setProvinceRankingData(res.data);\n      });\n    },\n    queryTrendDataList() {\n      let self = this;\n      covid19Service.getDailyList().then((res) => {\n        if (!res.success) {\n          // TODO 错误处理...\n          console.log(\"错误:\" + res.info);\n          return;\n        }\n        self.trendDataList = res.data;\n        // console.log(\"表格数据res.data\"+JSON.stringify(res.data))\n        // 重置图表数据\n        self.setBasicIncrTrendData(res.data);\n      });\n    },\n\n    setBasicIncrTrendData(data) {\n      // 09-30,10-30,11-3,11-4,11-5,11-6,11-7\n      let dateList = this.sumIssue.time;\n      let currentConfirmedIncrList = this.sumIssue.issuesCreated;\n      let importedIncrList = this.sumIssue.issuesClosed;\n\n      // 仅获取7条数据\n      let sevenDayDateList = this.sumIssue.time;\n      // 仅显示一周条数据\n      let confirmedCountList = this.sumIssue.issuesCreated;\n      let curedCountList = this.sumIssue.issuesClosed;\n\n      let count = 7;\n      let noInFectDataList = [];\n\n      for (let i = data.currentConfirmedIncrList.length - 1; i >= 0; i--) {\n        dateList.push(data.currentConfirmedIncrList[i][0]);\n        currentConfirmedIncrList.push(data.currentConfirmedIncrList[i][1]);\n      }\n      for (let i = data.importedIncrList.length - 1; i >= 0; i--) {\n        importedIncrList.push(data.importedIncrList[i][1]);\n      }\n      for (let i = data.noInFectCountList.length - 1; i >= 0; i--) {\n        noInFectDataList.push(data.noInFectCountList[i][1]);\n      }\n\n      for (let i = count; i >= 0; i--) {\n        if (confirmedCountList.length >= count) {\n          break;\n        }\n        sevenDayDateList.push(data.confirmedCountList[i][0]);\n        confirmedCountList.push(data.confirmedCountList[i][1]);\n      }\n      for (let i = count; i >= 0; i--) {\n        if (curedCountList.length >= count) {\n          break;\n        }\n        curedCountList.push(data.curedCountList[i][1]);\n      }\n      this.basicIncrTrendData = {\n        dateList: [\n          \"09-30\",\n          \"10-30\",\n          \"11-3\",\n          \"11-4\",\n          \"11-5\",\n          \"11-6\",\n          \"11-7\",\n          \"05-16\",\n          \"05-17\",\n          \"05-18\",\n          \"05-19\",\n          \"05-20\",\n          \"05-21\",\n          \"05-22\",\n          \"05-23\",\n          \"05-24\",\n          \"05-25\",\n          \"05-26\",\n          \"05-27\",\n          \"05-28\",\n          \"05-29\",\n          \"05-30\",\n          \"05-31\",\n          \"06-01\",\n          \"06-02\",\n          \"06-03\",\n          \"06-04\",\n          \"06-05\",\n          \"06-06\",\n          \"06-11\",\n          \"06-19\",\n          \"06-20\",\n          \"06-29\",\n          \"06-29\",\n          \"06-30\",\n          \"07-01\",\n          \"07-02\",\n          \"07-03\",\n          \"07-04\",\n          \"07-05\",\n          \"07-06\",\n          \"07-07\",\n          \"07-08\",\n          \"07-10\",\n          \"07-11\",\n          \"07-12\",\n          \"07-13\",\n          \"07-14\",\n          \"07-15\",\n        ],\n        importedIncrDataList: importedIncrList,\n        currentConfirmedIncrDataList: currentConfirmedIncrList,\n        noInFectDataList: noInFectDataList,\n      };\n      this.confirmSingleBarChartData = {\n        dateList: this.sumIssue.time,\n        curedCountList: this.sumIssue.issuesCreated,\n        confirmedCountList: this.sumIssue.issuesClosed,\n      };\n    },\n    //仓库排名代码区域\n    setProvinceComfirmedCountBoardData(areaList) {\n      let resultList = areaList.map((item) => {\n        return [item.repoName, item.maxStars, item.maxForks, item.openvalue];\n      });\n      // 重新生成，否则无法刷新状态\n      this.provinceConfirmedCountBoardConfig =\n        initProvinceConfirmedCountBoardConfig(resultList);\n    },\n    setAreaChartData(areaList) {\n      let confirmedCountList = [];\n      let provinceList = [];\n      let curedCountList = [];\n      let deadCountList = [];\n      areaList.forEach((item) => {\n        provinceList.push(item.provinceLabel);\n        confirmedCountList.push(item.confirmedCount);\n        curedCountList.push(item.curedCount);\n        deadCountList.push(item.deadCount);\n      });\n      this.areaData = {\n        provinceList: provinceList,\n        confirmedCountList: confirmedCountList,\n        curedCountList: curedCountList,\n        deadCountList: deadCountList,\n      };\n    },\n    provinceTableDialogShowHandler() {\n      this.provinceTableDialogVisible = true;\n    },\n    provinceTableDialogClose() {\n      this.provinceTableDialogVisible = false;\n    },\n    aboutDialogShowHandler() {\n      this.aboutDialogVisible = true;\n    },\n    aboutDialogClose() {\n      this.aboutDialogVisible = false;\n    },\n    setBasicData(data) {\n      // 重新生成，否则视图不更新\n      let config = initBasicConfig(data);\n      this.defaultDataConfig = config;\n      // 处理治愈率和死亡率\n      this.rate = {\n        curedRate: data.curedRate / 100,\n        deadRate: data.deadRate / 100,\n      };\n    },\n  \n    startQueryData() {\n        this.searchPojoname();\n    //   this.queryKddDataList();\n    //   this.querySumDataList();\n    //   this.queryIssueSum();\n    //   this.queryNodeLinks();\n    //   this.queryWareHouseList();\n    //   this.queryDataPullList();\n      this.queryBasicData();\n      this.queryProvinceDataList();\n      this.queryTrendDataList();\n    },\n    initAllChart() {\n      this.$refs.dataMap.initChart();\n      // this.$refs.cureRateChart.initChart()\n      this.$refs.confirmedCountTrendChart.initChart();\n      this.$refs.topConfirmedCountRankChart.initChart();\n      this.$refs.confirmSingleBarChart.initChart();\n      this.$refs.basicProportionChart.initChart();\n    },\n  },\n  mounted() {\n    this.initAllChart();\n    this.startQueryData();\n    \n    let self = this;\n    // 定义定时器，隔 5 秒刷新一次\n    this.timer = setInterval(() => {\n      self.startQueryData();\n    }, 500000);\n  },\n  beforeDestroy() {\n    clearInterval(this.timer);\n  },\n};\n</script>\n<style>\n.container {\n  position: relative;\n}\nh1 {\n  font-size: 35px;\n  font-weight: bold;\n  padding: 20px;\n}\n.flex {\n  display: flex;\n}\n.top-header {\n  position: relative;\n  margin-bottom: 10px;\n}\n.top-header-tip {\n  font-size: 14px;\n  position: absolute;\n  padding: 20px 20px;\n  text-align: right;\n  top: 0;\n  right: 0;\n}\n.title {\n  min-width: 350px;\n}\n.chart-card {\n  background: #0f142b;\n  border-radius: 10px;\n  margin: 0 20px;\n}\n.main-inner-map-wraper {\n  height: 100%;\n  margin: 0 20px;\n}\n.map {\n    width: 100%;\n  max-width: 100%;\n  height: 77vh;\n  padding: 20px 10px 10px 10px;  \n}\n.province-scroll-board-wrapper {\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n.chart-item-bottom-sep {\n  margin-bottom: 20px;\n}\n.province-table-title {\n  color: #fff;\n  font-size: 16px;\n  font-weight: bold;\n  padding: 10px 10px 10px 20px;\n  text-align: left;\n}\n.basic-incr-trend-chart-wrapper {\n  padding-bottom: 10px;\n}\n.sub-title,\n.last-update-time,\n.province-scroll-board-wrapper ::v-deep .dv-scroll-board .header,\n.province-scroll-board-wrapper ::v-deep .dv-scroll-board .rows {\n  font-size: 14px;\n}\n.province-scroll-board-wrapper ::v-deep .dv-scroll-board .rows {\n  color: #bcbcbf;\n}\n.province-data-modal-title {\n  color: #000;\n  font-size: 20px;\n  font-weight: bold;\n}\n.province-data-modal-update-time {\n  color: #58585a;\n  font-size: 16px;\n  font-weight: normal;\n  padding-top: 10px;\n  display: block;\n}\n.cure-and-dead-rate-chart {\n  display: flex;\n  justify-content: space-around;\n}\n.basic-header{\n  display: flex;\n  flex-direction: column; /* 如果你希望子元素垂直排列 */\n}\n.top-basic-info {\n  display: flex;\n  flex-wrap: wrap; /* 允许子元素换行 */\n  justify-content: space-between; /* 子元素均匀分布 */\n  align-items: center; /* 子元素在交叉轴上居中对齐 */\n}\n.dv-scroll-ranking-board .ranking-column .inside-column {\n  background: linear-gradient(90deg, #29bfff, #a231ff, #0deccd, #29bfff);\n}\n.chart-item-container {\n  margin: 0 10px;\n}\n.about-wraper {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n}\n/* 新增搜索框样式 */\n.search-container {\n  margin:20px; /* 与 chart-card 的 margin 一致 */\n}\n\n.search-input {\n    width: 90%; /* 根据需要调整宽度 */\n    padding: 10px; /* 增加内边距 */\n    background-color: #10142B; /* 半透明背景 */\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* 轻微阴影 */\n    background-color: #f0f0f0; /* 浅灰色背景 */\n  border: 2px solid #ccc; /* 边框颜色 */\n  border-radius: 8px; /* 圆角边框 */\n}\n.search-input:hover {\n  border-color: #888; /* 鼠标悬停时的边框颜色 */\n}\n\n.search-input:focus {\n  border-color: #007bff; /* 聚焦时的边框颜色 */\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, .25); /* 聚焦时的阴影效果 */\n}\n.search-input {\n  color: #333; /* 文本颜色 */\n  font-size: 16px; /* 字体大小 */\n}\n@media (max-width: 768px) {\n  .search-input {\n    width: 100%; /* 在小屏幕上占满宽度 */\n  }\n}\n.search-container {\n  position: relative;\n}\n\n.search-input {\n  padding-right: 2vw; /* 为图标留出空间 */\n}\n\n.search-container i {\n  position: absolute;\n  right: 2vw;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #888; /* 图标颜色 */\n}\n</style>"],"mappings":"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","ignoreList":[]}]}