{"remainingRequest":"C:\\Users\\sa\\Desktop\\08\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sa\\Desktop\\08\\src\\components\\DataMap\\index.vue?vue&type=style&index=0&id=5c805f55&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\sa\\Desktop\\08\\src\\components\\DataMap\\index.vue","mtime":1735111790777},{"path":"C:\\Users\\sa\\Desktop\\08\\node_modules\\css-loader\\dist\\cjs.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\08\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1734174292000},{"path":"C:\\Users\\sa\\Desktop\\08\\node_modules\\postcss-loader\\src\\index.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\08\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\08\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1734174292000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5ib3JkZXJlZCB7CiAgYm9yZGVyOiAxcHggc29saWQgIzAwMDsKfQouc2Nyb2xsaXQgewogIG92ZXJmbG93LXk6IGF1dG87Cn0KI21haW4gewogIGRpc3BsYXk6IGZsZXg7Cn0KCiNncmFwaCB7CiAgd2lkdGg6IDgwMHB4OwogIGhlaWdodDogODAwcHg7Cn0KCiNjb250cm9sIHsKICB3aWR0aDogNTAwcHg7CiAgaGVpZ2h0OiA4MDBweDsKfQoKI2xpc3QgewogIHdpZHRoOiA0ODBweDsKICBoZWlnaHQ6IDMwMHB4OwogIG1hcmdpbjogMTBweDsKfQoKI2RldGFpbHMgewogIHdpZHRoOiA0ODBweDsKICBoZWlnaHQ6IDQ0MHB4OwogIG1hcmdpbjogMTBweDsKfQoKI3RpdGxlIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAxMnB4Owp9CgojbGVhZGVyYm9hcmRfdGFibGUgewogIHdpZHRoOiA5NSU7CiAgbWFyZ2luOiAxMHB4Owp9CgojZGV0YWlsc190YWJsZSB7CiAgd2lkdGg6IDk1JTsKICBtYXJnaW46IDEwcHg7Cn0KCi5ib3JkZXJlZCB7CiAgYm9yZGVyOiAycHggc29saWQgZ3JleTsKfQoKI2xlYWRlcmJvYXJkX2RpdiB7CiAgaGVpZ2h0OiAyNDBweDsKfQoKI2RldGFpbHNfZGl2IHsKICBoZWlnaHQ6IDM4MHB4Owp9Cgouc2Nyb2xsaXQgewogIG92ZXJmbG93LXg6IGhpZGRlbjsKICBvdmVyZmxvdy15OiBhdXRvOwp9Cgp0cjpudGgtY2hpbGQoZXZlbikgewogIGJhY2tncm91bmQtY29sb3I6ICNkNmVlZWU7Cn0KCnRhYmxlLAp0aCwKdGQgewogIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOwp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAyQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/DataMap","sourcesContent":["<template>\n  <div id=\"main\" class=\"bordered\">\n    <div ref=\"graph\" class=\"bordered\"></div>\n    <div id=\"control\" class=\"bordered\">\n      <div id=\"list\" class=\"bordered\">\n        <div id=\"title\">\n          <h2>Leaderboard</h2>\n        </div>\n        <div id=\"leaderboard_div\" class=\"scrollit\">\n          <table>\n            <thead>\n              <tr>\n                <th>Login</th>\n                <th>OpenRank</th>\n              </tr>\n            </thead>\n            <tbody>\n              <!-- Leaderboard rows will be dynamically inserted here -->\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div id=\"details\" class=\"bordered\">\n        <div id=\"title\">\n          <h2>Details</h2>\n        </div>\n        <div id=\"details_div\" class=\"scrollit\">\n          <table>\n            <thead>\n              <tr>\n                <th>From</th>\n                <th>Ratio</th>\n                <th>Value</th>\n                <th>OpenRank</th>\n              </tr>\n            </thead>\n            <tbody>\n              <!-- Details rows will be dynamically inserted here -->\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script src=\"https://assets.codepen.io/9606223/open_digger_utils.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/echarts/5.3.2/echarts.min.js\"></script>\n    <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.5.1/jquery.min.js\"></script>\n \n<script>\nimport * as echarts from \"echarts\";\nimport axios from 'axios';\nvar month = decodeURIComponent(getUrlParam('month', '202406'));\nexport default {\n  name: \"GraphComponent\",\n  data() {\n    return {\n      chart: null,\n      typeMap: new Map([\n        [\"r\", \"repo\"],\n        [\"i\", \"issue\"],\n        [\"p\", \"pull\"],\n        [\"u\", \"user\"],\n      ]),\n      leaderboardData: [],\n      detailsData: [],\n    };\n  },\n  mounted() {\n    console.log(\"我进来了\");\n    this.initChart();\n    this.loadData();\n  },\n  methods: {\n    initChart() {\n      this.chart = echarts.init(this.$refs.graph);\n    },\n    loadData() {\n      axios\n        .get(\n          \"https://oss.x-lab.info/open_digger/github/umijs/umi/community_openrank.json\"\n        )\n        .then((response) => {\n          console.log(response+\"SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS\")\n          this.data = response.data; // 将获取的数据保存到组件的数据属性中\n        })\n        .catch((error) => {\n          console.error(\"error\", error);\n        });\n    },\n    clearDiv(id) {\n      var div = document.getElementById(id);\n      if (div && div.hasChildNodes()) {\n        var children = div.childNodes;\n        for (var child of children) {\n          div.removeChild(child);\n        }\n      }\n    },\n    addRow(table, texts) {\n      var tr = table.insertRow();\n      for (var t of texts) {\n        var td = tr.insertCell();\n        td.appendChild(document.createTextNode(t.toString().slice(0, 20)));\n      }\n    },\n    setLeaderboard(graph) {\n      clearDiv(\"leaderboard_table\");\n      var table = document.getElementById(\"leaderboard_table\");\n      addRow(table, [\"Login\", \"OpenRank\"]);\n      var users = graph.data[month].nodes\n        .map((node) => ({\n          id: graph.meta.nodes[node[0]][0],\n          initialValue: node[1],\n          value: node[2],\n          login: graph.meta.nodes[node[0]][1],\n        }))\n        .filter((n) => n.id[0] === \"u\")\n        .sort((a, b) => b.value - a.value);\n      for (var u of users) {\n        addRow(table, [u.login, u.value]);\n      }\n    },\n    setDetails(graph, id) {\n      clearDiv(\"details_table\");\n      var table = document.getElementById(\"details_table\");\n      var index = graph.meta.nodes.findIndex((i) => i[0] === id);\n      var data = graph.data[month];\n      var selfNode = data.nodes.find((i) => i[0] === index);\n      addRow(table, [\"From\", \"Ratio\", \"Value\", \"OpenRank\"]);\n      addRow(table, [\n        \"Self\",\n        graph.meta.retentionFactor,\n        selfNode[1],\n        (graph.meta.retentionFactor * selfNode[1]).toFixed(3),\n      ]);\n\n      var other = data.links\n        .filter((l) => l[1] == index)\n        .map((l) => {\n          var sourceIndex = l[0];\n          var sourceNode = graph.meta.nodes[sourceIndex];\n          var sourceValue = data.nodes.find((i) => i[0] === sourceIndex);\n          var type = typeMap.get(sourceNode[0][0]);\n          var name = sourceNode[1];\n          if (type === \"pull\")\n            name = \"#\" + sourceNode[0].slice(1) + \" \" + sourceNode[1];\n          else if (type === \"issue\")\n            name =\n              \"#\" +\n              (platform == \"gitee\"\n                ? parseInt(sourceNode[0].slice(1)).toString(36).toUpperCase()\n                : sourceNode[0].slice(1)) +\n              \" \" +\n              sourceNode[1];\n          return [\n            name,\n            parseFloat((1 - graph.meta.retentionFactor) * l[2]).toFixed(3),\n            sourceValue[2],\n            parseFloat(\n              (\n                (1 - graph.meta.retentionFactor) *\n                l[2] *\n                sourceValue[2]\n              ).toFixed(3)\n            ),\n          ];\n        })\n        .sort((a, b) => b[3] - a[3]);\n      var repoNode = data.nodes.find((i) => i[0] === 0);\n      other.push([\n        graph.meta.repoName,\n        (1 / (data.nodes.length - 1)).toFixed(3),\n        repoNode[2],\n        ((1 / (data.nodes.length - 1)) * repoNode[2]).toFixed(3),\n      ]);\n      for (var r of other) {\n        addRow(table, r);\n      }\n    },\n    onGraphDataLoaded(graph) {\n      setLeaderboard(graph);\n      var data = graph.data[month];\n      var nodes = data.nodes.map((node) => {\n        var id = graph.meta.nodes[node[0]][0];\n        var type = typeMap.get(id[0]);\n        var name = graph.meta.nodes[node[0]][1];\n        if (type === \"pull\") name = \"#\" + id.slice(1);\n        else if (type === \"issue\")\n          name =\n            \"#\" +\n            (platform == \"gitee\"\n              ? parseInt(id.slice(1)).toString(36).toUpperCase()\n              : id.slice(1));\n        return {\n          id,\n          initialValue: node[1],\n          value: node[2],\n          name,\n          symbolSize: Math.log(node[2] + 1) * 10,\n          category: type,\n        };\n      });\n      var links = data.links.map((link) => {\n        return {\n          source: graph.meta.nodes[link[0]][0],\n          target: graph.meta.nodes[link[1]][0],\n          value: link[2],\n        };\n      });\n      nodes.forEach((node) => {\n        if (node.category === \"issue\" || node.category === \"pull\") {\n          links.push({\n            source: graph.meta.nodes[0][0],\n            target: node.id,\n            value: 0.05,\n          });\n        }\n      });\n      var categories = Array.from(typeMap.values());\n      var option = {\n        title: {\n          text: `Community OpenRank for ${repoName} in ${month}`,\n          top: \"bottom\",\n          left: \"right\",\n        },\n        legend: [\n          {\n            data: categories,\n          },\n        ],\n        tooltip: {\n          trigger: \"item\",\n        },\n        series: [\n          {\n            name: \"Collaborative graph\",\n            type: \"graph\",\n            layout: \"force\",\n            nodes,\n            links,\n            categories: categories.map((c) => {\n              return { name: c };\n            }),\n            roam: true,\n            label: {\n              position: \"right\",\n              show: true,\n            },\n            force: {\n              layoutAnimation: false,\n              repulsion: 300,\n            },\n          },\n        ],\n      };\n      chart.setOption(option);\n      chart.on(\"dblclick\", function (params) {\n        setDetails(graph, params.data.id);\n      });\n    },\n  },\n};\n</script>\n<style scoped>\n.bordered {\n  border: 1px solid #000;\n}\n.scrollit {\n  overflow-y: auto;\n}\n#main {\n  display: flex;\n}\n\n#graph {\n  width: 800px;\n  height: 800px;\n}\n\n#control {\n  width: 500px;\n  height: 800px;\n}\n\n#list {\n  width: 480px;\n  height: 300px;\n  margin: 10px;\n}\n\n#details {\n  width: 480px;\n  height: 440px;\n  margin: 10px;\n}\n\n#title {\n  text-align: center;\n  font-size: 12px;\n}\n\n#leaderboard_table {\n  width: 95%;\n  margin: 10px;\n}\n\n#details_table {\n  width: 95%;\n  margin: 10px;\n}\n\n.bordered {\n  border: 2px solid grey;\n}\n\n#leaderboard_div {\n  height: 240px;\n}\n\n#details_div {\n  height: 380px;\n}\n\n.scrollit {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\ntr:nth-child(even) {\n  background-color: #d6eeee;\n}\n\ntable,\nth,\ntd {\n  border: 1px solid black;\n}\n</style>"]}]}