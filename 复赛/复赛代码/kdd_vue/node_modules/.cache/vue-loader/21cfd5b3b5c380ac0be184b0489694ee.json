{"remainingRequest":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\cache-loader\\dist\\cjs.js??ref--13-0!C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--6!C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sa\\Desktop\\openrank\\08\\src\\views\\main-layout.vue?vue&type=template&id=21478f41","dependencies":[{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\src\\views\\main-layout.vue","mtime":1735622960679},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\babel.config.js","mtime":1638539142000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\babel-loader\\lib\\index.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1734174292000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1734174292000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}