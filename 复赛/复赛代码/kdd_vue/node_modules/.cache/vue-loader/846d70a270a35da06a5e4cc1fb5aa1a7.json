{"remainingRequest":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sa\\Desktop\\openrank\\08\\src\\components\\DataMap\\index.vue?vue&type=style&index=0&id=5c805f55&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\src\\components\\DataMap\\index.vue","mtime":1735461060680},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\css-loader\\dist\\cjs.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1734174292000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\postcss-loader\\src\\index.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734174290000},{"path":"C:\\Users\\sa\\Desktop\\openrank\\08\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1734174292000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIE9wdGlvbmFsOiBZb3UgY2FuIGN1c3RvbWl6ZSBzdHlsZXMgaGVyZSAqLwo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAmHA","file":"index.vue","sourceRoot":"src/components/DataMap","sourcesContent":["<template>\n  <div id=\"chart\" style=\"width: 100%; height: 400px;\"></div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\n\nexport default {\n  props: {\n    nodes2: Array,\n    links2: Array,\n  },\n  data() {\n    return {\n      categories: [\n        { name: \"pojo\" },\n        { name: \"issue\" },\n        { name: \"pull\" },\n        { name: \"user\" },\n      ],\n    };\n  },\n  mounted() {\n    this.initChart();\n  },\n  methods: {\n    initChart() {\n      let chartDom = document.getElementById(\"chart\");\n      if (chartDom) {\n        let myChart = echarts.init(chartDom);\n        myChart.resize(); // 确保图表自适应大小\n        myChart.setOption(this.setOption());\n        myChart.hideLoading();\n      }\n    },\n\n    setOption() {\n      return {\n        tooltip: {},\n        legend: [\n          {\n            data: this.categories.map((a) => a.name),\n          },\n        ],\n        animationDuration: 1500,\n        animationEasingUpdate: \"quinticInOut\",\n        series: [\n          {\n            name: \"Network Graph\",\n            type: \"graph\",\n            layout: \"force\", // 使用 force 布局\n            force: {\n              repulsion: 300, // 节点之间的排斥力\n              edgeLength: 100, // 边的长度\n            },\n            data: this.nodes2.map((node) => ({\n              name: node.name,\n              x: node.x,\n              y: node.y,\n              category: node.category,\n              symbolSize: node.symbolSize || 30, // 默认节点大小\n            })),\n            links: this.links2.map((link) => ({\n              source: link.source,\n              target: link.target,\n            })),\n            categories: this.categories,\n            roam: true,\n            label: {\n              show: true,\n              position: \"right\",\n              formatter: \"{b}\",\n            },\n            labelLayout: {\n              hideOverlap: true,\n            },\n            scaleLimit: {\n              min: 0.4,\n              max: 2,\n            },\n            lineStyle: {\n              color: \"source\", // 使用源节点的颜色\n              width: 2,        // 边宽度\n              curveness: 0.3,  // 边的弯曲程度\n            },\n          },\n        ],\n      };\n    },\n  },\n  watch: {\n    // 监听节点和链接数据的变化\n    nodes2: {\n      handler(newVal) {\n        this.$nextTick(() => {\n          this.initChart();\n        });\n      },\n      deep: true,\n      immediate: true,\n    },\n    links2: {\n      handler(newVal) {\n        this.$nextTick(() => {\n          this.initChart();\n        });\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Optional: You can customize styles here */\n</style>\n"]}]}